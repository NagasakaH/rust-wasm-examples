name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# GitHub Pagesへのデプロイに必要な権限を設定
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    # 1. リポジトリをチェックアウト
    - name: Checkout
      uses: actions/checkout@v4
    
    # 2. Rustツールチェインのセットアップ
    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        target: wasm32-unknown-unknown
        
    # 3. wasm-packのインストール
    - name: Install wasm-pack
      run: cargo install wasm-pack
      
    # 4. Node.jsのセットアップ
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          HelloWorld/package-lock.json
          Canvas/package-lock.json
          WebGL/package-lock.json
        
    # 5. HelloWorldプロジェクトのビルド
    - name: Build HelloWorld
      run: |
        cd HelloWorld
        npm install
        npm run build
        
    # 6. Canvasプロジェクトのビルド
    - name: Build Canvas
      run: |
        cd Canvas
        npm install
        npm run build
        
    # 7. WebGLプロジェクトのビルド
    - name: Build WebGL
      run: |
        cd WebGL
        npm install
        npm run build

    # 8. インデックスページの作成
    - name: Create index page
      run: |
        mkdir -p dist/
        cat > dist/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="ja">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Rust WebAssembly Examples</title>
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    max-width: 800px;
                    margin: 0 auto;
                    padding: 2rem;
                    line-height: 1.6;
                }
                .project-card {
                    border: 1px solid #ddd;
                    border-radius: 8px;
                    padding: 1.5rem;
                    margin: 1rem 0;
                    transition: box-shadow 0.2s;
                }
                .project-card:hover {
                    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
                }
                .project-title {
                    color: #333;
                    text-decoration: none;
                    font-size: 1.2rem;
                    font-weight: bold;
                }
                .project-description {
                    color: #666;
                    margin-top: 0.5rem;
                }
            </style>
        </head>
        <body>
            <h1>Rust WebAssembly Examples</h1>
            <p>このサイトでは、RustとWebAssemblyを使用した様々なサンプルプロジェクトを紹介しています。</p>
            
            <div class="project-card">
                <a href="./hello_world/" class="project-title">Hello World</a>
                <div class="project-description">
                    基本的なRust WebAssemblyの実装例。JavaScriptとの相互作用を学習できます。
                </div>
            </div>
            
            <div class="project-card">
                <a href="./canvas/" class="project-title">Canvas Drawing</a>
                <div class="project-description">
                    HTML5 Canvasを使用した描画サンプル。RustからCanvas APIを呼び出してグラフィックを描画します。
                </div>
            </div>
            
            <div class="project-card">
                <a href="./webgl/" class="project-title">WebGL Rendering</a>
                <div class="project-description">
                    WebGLを使用した3D描画サンプル。高性能なグラフィック処理をRustで実装しています。
                </div>
            </div>
            
            <footer style="margin-top: 2rem; padding-top: 1rem; border-top: 1px solid #eee; color: #666;">
                <p>GitHub Repository: <a href="https://github.com/NagasakaH/rust-wasm-examples">rust-wasm-examples</a></p>
            </footer>
        </body>
        </html>
        EOF
        
    # 9. Pages用artifactをアップロード
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v4
      with:
        path: ./dist

  # デプロイジョブ（mainブランチの場合のみ）
  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
